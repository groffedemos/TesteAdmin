trigger:
 branches:
  include:
     - master
 paths:
  exclude:
  - azure-pipelines.yml

variables:
- name: slnPath
  value: ./ANPAdmin.sln
- name: projPath
  value: ./ANPAdmin.UI/ANPAdmin.UI.csproj
- name: interfaceTestProjectPath
  value: ./ANPAdmin.UI/ANPAdmin.UI.csproj  
- name: unitTestProjectPath
  value: ./ANPAdmin.UnitTests/ANPAdmin.UnitTests.csproj    
  
stages:
 - stage: BuildAndTest
   displayName:  Compilar e Testes de Unidade
   jobs:
    - job: Build_And_Test
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: DotNetCoreCLI@2
          displayName: "Baixar Dependencias"
          inputs:
            command: 'restore'
            projects: '$(slnPath)'
            feedsToUse: 'select'
        - task: DotNetCoreCLI@2
          displayName: "Compilar Projeto"
          inputs:
            command: 'build'
            projects: '$(slnPath)'
        - task: DotNetCoreCLI@2
          displayName: "Testar Projeto de Unidade"
          inputs:
            command: 'test'
            projects: '$(unitTestProjectPath)'
            testRunTitle: 'Testes de Unidade'
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: './ANPAdmin.InterfaceTests/bin/Debug/netcoreapp3.1/'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/TestesInterface.zip'
            replaceExistingArchive: true
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '$(projPath)'
            arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
 - stage: DeployHomolog
   displayName:  Faz Deploy do App em Homolog
   jobs:
      - job: Deploy_Homolog
        pool:
          vmImage: windows-latest
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Microsoft Azure Sponsorship(ff737bc0-dba1-4359-af80-837301207505)'
              appType: 'webAppLinux'
              WebAppName: 'anpcomm-admin-exemplo'
              deployToSlotOrASE: true
              ResourceGroupName: 'masterclass-azuredevops-exemplo'
              SlotName: 'homolog'
              packageForLinux: '$(System.ArtifactsDirectory)/drop/ANPAdmin.UI.zip'
              RuntimeStack: 'DOTNETCORE|3.1'
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(System.ArtifactsDirectory)/drop/TestesInterface.zip'
              destinationFolder: 'TestesInterface'
              cleanDestinationFolder: true
              overwriteExistingFiles: false
          - task: VSTest@2
            displayName: Execute Interface Tests
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: '**\ANPAdmin.InterfaceTests.dll'
              searchFolder: '$(System.DefaultWorkingDirectory)'
              uiTests: true
              testRunTitle: 'Testes de Interface'
          - task: VisualStudioTestPlatformInstaller@1
            displayName: Instalar VS Test Platform
            inputs:
              packageFeedSelector: 'nugetOrg'
              versionSelector: 'latestPreRelease'
          - task: VSTest@2
            displayName: Executar testes associados ao Test Plans
            inputs:
              testSelector: 'testPlan'
              testPlan: '7'
              testSuite: '9'
              testConfiguration: '3'
              searchFolder: '$(System.DefaultWorkingDirectory)'
              vsTestVersion: 'toolsInstaller'
              codeCoverageEnabled: false
              testRunTitle: 'Test Plan'
          - task: DeleteFiles@1
            displayName: Exclui os arquivos da pasta drop
            inputs:
              SourceFolder: '$(Build.ArtifactStagingDirectory)'
              Contents: '**'              
          - task: CopyFiles@2
            displayName: Copia os prints das evidencias de testes
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/TestesInterface/Screenshots/'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
 
 - stage: DeployPreProd
   displayName: Deploy PreProd
   jobs:
    - deployment: DeployWeb
      displayName: deploy Web App
      pool:
        vmImage: 'Ubuntu-latest'
      environment: 'ANPComm Admin PreProd'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureAppServiceManage@0
              displayName: Swap Homolog e PreProd
              inputs:
                azureSubscription: 'Microsoft Azure Sponsorship(ff737bc0-dba1-4359-af80-837301207505)'
                Action: 'Swap Slots'
                WebAppName: 'anpcomm-admin-exemplo'
                ResourceGroupName: 'masterclass-azuredevops-exemplo'
                SourceSlot: 'homolog'
                SwapWithProduction: false
                TargetSlot: 'preprod'
            - task: JMeterInstaller@0
              displayName: Install JMeter 5.2.1
            - task: UsePythonVersion@0
              displayName: 'Use Python 3.7'
              inputs:
                versionSpec: 3.7
            - task: TaurusInstaller@0
              displayName: Install Taurus 1.14.1
            - task: TaurusRunner@0
              displayName: Run Taurus
              inputs:
                taurusConfig: |
                  execution:
                  - scenario:
                      requests:
                      - http://anpcomm-admin-exemplo-preprod.azurewebsites.net/Login
                      # You can also reference a JMeter test plan (recommended)
                      # script: website-test.jmx
                    concurrency: 100
                    iterations: 10
                    ramp-up: 2s
                  
                  reporting:
                  - module: junit-xml
                    filename: taurus-output/TEST-Taurus.xml
                jmeterHome: '$(JMeterInstaller.JMeterHome)'
                jmeterPath: '$(JMeterInstaller.JMeterPath)'
                jmeterVersion: '$(JMeterInstaller.JMeterVersion)'
                outputDir: 'taurus-output'
            - task: PublishTestResults@2
              inputs:
                testResultsFormat: 'JUnit'
                testResultsFiles: 'taurus-output/TEST-Taurus.xml'
            - task: PublishBuildArtifacts@1
              inputs:
                PathtoPublish: '$(System.DefaultWorkingDirectory)/taurus-output'
                ArtifactName: 'LoadTests'
                publishLocation: 'Container'
 - stage: LoadTest
   displayName: Load Test em Pre Prod
   jobs:
   - deployment: LoadTest
     displayName: LoadTest
     pool:
      name: 'LoadTest'
     environment: 'Load Test'
     strategy:
      runOnce:
        deploy:
          steps:
          - script: 'jmeter -n -t $(Build.SourcesDirectory)/LoadTest.jmx -l C:\$(Build.DefinitionName)\$(Build.BuildId).jtl'
            workingDirectory: 'C:\JMeter\apache-jmeter-5.3\bin'
            displayName: 'Run JMeter'
          - script: 'python $(Build.SourcesDirectory)/jtl_junit_converter.py C:\$(Build.DefinitionName)\$(Build.BuildId).jtl C:\$(Build.DefinitionName)\$(Build.BuildId).xml'
            displayName: 'Convert JMeter Result to JUnit'
          - task: PublishTestResults@2
            displayName: 'Publish Load Test Results'
            inputs:
              testResultsFiles: '$(Build.BuildId).xml'
              searchFolder: 'C:\$(Build.DefinitionName)'
              testRunTitle: 'Load Tests'
 - stage: DeployProd
   displayName: Faz Deploy em Prod
   jobs:
   - deployment: DeployWeb
     displayName: deploy Web App
     pool:
      vmImage: 'Ubuntu-latest'
     environment: 'ANPComm Admin Prod'
     strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: Blue Green Deployment
            inputs:
              azureSubscription: 'Microsoft Azure Sponsorship(ff737bc0-dba1-4359-af80-837301207505)'
              Action: 'Swap Slots'
              WebAppName: 'anpcomm-admin-exemplo'
              ResourceGroupName: 'masterclass-azuredevops-exemplo'
              SourceSlot: 'preprod'